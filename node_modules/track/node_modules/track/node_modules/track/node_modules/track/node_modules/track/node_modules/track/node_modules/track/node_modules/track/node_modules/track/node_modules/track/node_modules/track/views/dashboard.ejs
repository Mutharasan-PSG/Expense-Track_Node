<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Expense Dashboard</title>
    <style>
        /* Global Styles */
        body {
            font-family: 'Arial', sans-serif;
            background: linear-gradient(135deg, #f5f7fa, #c3cfe2);
            color: #333;
            margin: 0;
            padding: 20px;
            position: relative;
        }

        h1, h2, h3 {
            color: #2c3e50;
            text-align: center;
            margin-bottom: 20px;
            font-family: 'Segoe UI', sans-serif;
            font-weight: 700;
            letter-spacing: 1px;
        }

        h1 {
            font-size: 36px;
            margin-bottom: 30px;
        }

        h2 {
            font-size: 28px;
        }

        h3 {
            font-size: 24px;
        }

        /* Form Styling */
        form {
            background-color: #fff;
            padding: 25px;
            border-radius: 10px;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
            margin-bottom: 30px;
            max-width: 600px;
            margin: 0 auto;
        }

        label {
            display: block;
            font-weight: 600;
            margin-bottom: 10px;
            color: #34495e;
        }

        input[type="number"],
        input[type="text"],
        input[type="file"],
        input[type="date"],
        select {
            width: 100%;
            padding: 12px;
            margin-bottom: 20px;
            border: 2px solid #dfe6e9;
            border-radius: 8px;
            font-size: 16px;
            transition: border-color 0.3s ease;
        }

        input[type="number"]:focus,
        input[type="text"]:focus,
        input[type="file"]:focus,
        input[type="date"]:focus,
        select:focus {
            border-color: #3498db;
            outline: none;
        }

        button[type="submit"] {
            background: linear-gradient(135deg, #3498db, #2980b9);
            color: #fff;
            border: none;
            padding: 15px;
            font-size: 18px;
            border-radius: 8px;
            cursor: pointer;
            transition: background 0.3s ease;
            width: 100%;
        }

        button[type="submit"]:hover {
            background: linear-gradient(135deg, #2980b9, #2471a3);
        }

        /* Table Styling */
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 30px;
            background-color: #fff;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
            border-radius: 10px;
            overflow: hidden;
        }

        th,
        td {
            padding: 15px 20px;
            border-bottom: 1px solid #ecf0f1;
        }

        th {
            background-color: #3498db;
            color: #fff;
            text-align: left;
            font-size: 18px;
        }

        td {
            font-size: 16px;
            color: #34495e;
        }

        a {
            text-decoration: none;
            color: #3498db;
            font-weight: bold;
        }

        a:hover {
            text-decoration: underline;
        }

        tr:hover {
            background-color: #f0f8ff;
            transition: background-color 0.2s ease;
        }

        /* Logout Button */
        .logout-btn {
            position: absolute;
            top: 20px;
            right: 20px;
            background-color: #e74c3c;
            color: #fff;
            padding: 12px 20px;
            text-align: center;
            border-radius: 8px;
            text-decoration: none;
            z-index: 100;
            transition: background-color 0.3s ease;
        }

        .logout-btn:hover {
            background-color: #c0392b;
        }

        /* Responsive Design */
        @media (max-width: 600px) {
            h1 {
                font-size: 30px;
            }

            h2 {
                font-size: 22px;
            }

            h3 {
                font-size: 20px;
            }

            table {
                font-size: 14px;
            }

            input[type="number"],
            input[type="text"],
            input[type="file"],
            input[type="date"],
            select,
            button[type="submit"] {
                font-size: 14px;
            }

            th,
            td {
                padding: 10px 12px;
            }

            .logout-btn {
                padding: 10px 15px;
            }
        }

        @media (min-width: 601px) {
            form {
                padding: 40px;
            }

            button[type="submit"] {
                padding: 16px 24px;
                font-size: 18px;
            }

            .logout-btn {
                padding: 14px 24px;
            }
        }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>

<body>
    <h1>Financial Summary</h1>
    <h2>Balance: ₹<%= balance %></h2>
    <h3>Total Income: ₹<%= income %></h3>
    <h3>Total Expenses: ₹<%= total_expenses %></h3>

    <!-- Add Income Form -->
    <h2>Add Income</h2>
    <form action="/add_income" method="post">
        <label for="amount">Amount:</label>
        <input type="number" id="amount" name="amount" required>

        <label for="source">Source:</label>
        <input type="text" id="source" name="source" required>

        <label for="date">Date:</label>
        <input type="date" id="date" name="date" required>

        <button type="submit">Add Income</button>
    </form>

    <!-- Add Expense Form with Category Dropdown -->
    <h2>Add Expense</h2>
    <form action="/add_expense" method="post" enctype="multipart/form-data">
        <label for="amount">Amount:</label>
        <input type="number" id="amount" name="amount" required>

        <label for="category">Category:</label>
        <select id="category" name="category" required>
            <option value="Food">Food</option>
            <option value="Transport">Transport</option>
            <option value="Utilities">Utilities</option>
            <option value="Entertainment">Entertainment</option>
            <option value="Medical">Medical</option>
            <option value="Other">Other</option>
        </select>

        <label for="description">Description:</label>
        <input type="text" id="description" name="description" required>

        <label for="date">Date:</label>
        <input type="date" id="date" name="date" required>

        <label for="image">Receipt/Image:</label>
        <input type="file" id="image" name="image" accept="image/*">

        <button type="submit">Add Expense</button>
    </form>

    <hr>



    <!-- Display Expenses Table -->
    <table>
        <thead>
            <tr>
                <th>Amount</th>
                <th>Category</th>
                <th>Description</th>
                <th>Date</th>
                <th>Receipt</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="expenseTableBody">
            <% expenses.forEach(expense => { %>
            <tr>
                <td>₹<%= expense.amount %></td>
                <td><%= expense.category %></td>
                <td><%= expense.description %></td>
                <td><%= expense.date.toLocaleDateString('en-GB') %></td>
                <td>
                    <% if (expense.image) { %>
                        <a href="/image/<%= expense.id %>" target="_blank">View Image</a>
                    <% } else { %>
                        No File
                    <% } %>
                </td>
                <td>
                    <a href="/edit_expense/<%= expense.id %>">Edit</a> |
                    <a href="/delete_expense/<%= expense.id %>" onclick="return confirm('Are you sure?')">Delete</a>
                </td>
            </tr>
            <% }) %>
        </tbody>
    </table>

    <!-- Date Range Filter -->
    <h2>Filter by Date</h2>
    <form id="dateFilterForm">
        <label for="startDate">Start Date:</label>
        <input type="date" id="startDate" name="startDate">

        <label for="endDate">End Date:</label>
        <input type="date" id="endDate" name="endDate">

        <button type="button" onclick="filterExpensesByDate()">Filter</button>
    </form>

   <!-- Expense Overview Chart -->
<h2>Expenses Overview</h2>
<canvas id="expenseChart" style="width: 50%; height: 55%;"></canvas>

    <script>
        // Predefined category colors for consistency
        const categoryColors = {
            'Food': '#FF6384',
            'Transport': '#36A2EB',
            'Utilities': '#FFCE56',
            'Entertainment': '#4BC0C0',
            'Medical': '#9966FF',
            'Other': '#FF9F40'
        };

        // Initialize the chart
        const ctx = document.getElementById('expenseChart').getContext('2d');
        let expenseChart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: [], // Will be filled dynamically
                datasets: [{
                    label: 'Expenses by Category',
                    data: [], // Will be filled dynamically
                    backgroundColor: [], // Will be filled dynamically based on category
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    }
                }
            }
        });

     // Function to group expenses by category and sum their amounts
function groupExpensesByCategory(expenses) {
    const groupedData = {};

    expenses.forEach(expense => {
        if (groupedData[expense.category]) {
            groupedData[expense.category] += expense.amount;
        } else {
            groupedData[expense.category] = expense.amount;
        }
    });

    return groupedData;
}

// Function to update the chart with grouped data
function updateChart(expenses) {
    const groupedExpenses = groupExpensesByCategory(expenses);

    const categories = Object.keys(groupedExpenses);
    const amounts = Object.values(groupedExpenses);
    const colors = categories.map(category => categoryColors[category] || '#CCCCCC'); // Use predefined color

    expenseChart.data.labels = categories;
    expenseChart.data.datasets[0].data = amounts;
    expenseChart.data.datasets[0].backgroundColor = colors;

    expenseChart.update();
}

// Function to fetch filtered expenses by date
function filterExpensesByDate() {
    const startDate = document.getElementById('startDate').value;
    const endDate = document.getElementById('endDate').value;

    fetch(`/filter_expenses?start=${startDate}&end=${endDate}`)
        .then(response => response.json())
        .then(data => {
            // Update table with filtered expenses
            const tableBody = document.getElementById('expenseTableBody');
            tableBody.innerHTML = ''; // Clear table body

            data.forEach(expense => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>₹${expense.amount}</td>
                    <td>${expense.category}</td>
                    <td>${expense.description}</td>
                    <td>${new Date(expense.date).toLocaleDateString('en-GB')}</td>
                    <td>${expense.image ? `<a href="/image/${expense.id}" target="_blank">View Image</a>` : 'No File'}</td>
                    <td><a href="/edit_expense/${expense.id}">Edit</a> | <a href="/delete_expense/${expense.id}" onclick="return confirm('Are you sure?')">Delete</a></td>
                `;
                tableBody.appendChild(row);
            });

            // Update the chart with the grouped data
            updateChart(data);
        })
        .catch(error => console.error('Error filtering expenses:', error));
}

    </script>

    <a class="logout-btn" href="/logout">Logout</a>
</body>

</html>
